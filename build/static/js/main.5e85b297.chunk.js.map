{"version":3,"sources":["components/Header.js","components/PostFeed.js","components/About.js","components/Main.js","components/Footer.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","this","props","description","location","href","twitter","instagram","Component","ReactMarkdown","require","PostFeed","projects","map","project","index","fields","key","type","alt","title","src","featuredImage","file","url","link","target","rel","source","About","react_markdown_default","bio","clientList","App","_this","Switch","Route","exact","path","render","components_PostFeed","components_About","Footer","client","createClient","space","concat","process","accessToken","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","info","_this2","hours","Date","getHours","isDayTime","setState","daytime","getEntry","then","entry","getEntries","content_type","order","entries","items","components_Header","Main","components_Footer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","BrowserRouter","containers_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5e85b297.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"site-title\">\n        <Link to='/'>Jermaine Davis</Link>\n        </div>\n        <div className=\"sub-header\">\n          <div className=\"sub-header-column\">\n            {this.props.description}\n          </div>\n          <div className=\"sub-header-column\">\n            {this.props.location}\n          </div>\n            <div className=\"sub-header-column\">\n              <a href=\"mailto:majorwaves@gmail.com\">Contact</a>,<br/> <Link to='/about'>About</Link>\n            </div>\n            <div className=\"sub-header-column\">\n              <a href={this.props.twitter}>Twitter</a>, <a href={this.props.instagram}>Instagram</a>\n            </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../styles/PostFeed.css';\nvar ReactMarkdown = require('react-markdown');\n\nclass PostFeed extends Component {\n\n  render() {\n    let projects = this.props.projects.map((project, index) => {\n      const description = project.fields.description;\n      return (\n        <div className=\"post\" key={index}>\n          <figure className={project.fields.type}>\n            <img alt={project.fields.title} src={project.fields.featuredImage.fields.file.url} />\n          </figure>\n          <div className=\"postInfo\">\n            <h1>{project.fields.title}</h1>\n            <span>\n              {project.fields.link ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={project.fields.link}>{project.fields.link}</a> : ''}\n            </span>\n            <ReactMarkdown source={description} />\n          </div>\n        </div>\n      )\n    });\n\n  return (\n      <div className=\"postFeed\">\n        {projects}\n      </div>\n    )\n  }\n}\n\nexport default PostFeed;\n","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport '../styles/About.css';\n\nclass About extends Component {\n\n  render() {\n\n  return (\n      <div className=\"about\">\n        <ReactMarkdown source={this.props.bio} />\n        <ReactMarkdown source={this.props.clientList} />\n      </div>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PostFeed from '../components/PostFeed.js';\nimport About from '../components/About.js';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <main>\n        <Switch>\n          <Route exact path=\"/\" render={props => <PostFeed projects={this.props.projects} />} />\n          <Route exact path=\"/about\" render={props => <About bio={this.props.bio} clientList={this.props.clientList} />} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport '../styles/Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        ***\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Header from '../components/Header.js';\nimport Main from '../components/Main.js';\nimport Footer from '../components/Footer.js';\nimport '../styles/App.css';\nconst contentful = require('contentful');\n\nvar client = contentful.createClient({\n  space: `${process.env.REACT_APP_CONTENTFUL_SPACE_ID}`,\n  accessToken: `${process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN}`\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: [],\n      projects: []\n    }\n  }\n\n  componentDidMount() {\n\n    //Check time\n    const hours = new Date().getHours();\n    const isDayTime = hours > 6 && hours < 18;\n    this.setState({\n      daytime: isDayTime\n    });\n\n    // TODO: Make this one request\n    client.getEntry('48yFnnMfyweEu0usOsIQaI')\n      .then((entry) => {\n        this.setState({\n          info: entry.fields\n        });\n      });\n\n    client.getEntries({\n      content_type: 'project',\n      order: '-fields.date'\n    })\n    .then((entries) => {\n        this.setState({\n          projects: entries.items\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className={'app ' + (this.state.daytime ? 'day' : 'night')}>\n        <Header\n          description={this.state.info.description}\n          location={this.state.info.location}\n          twitter={this.state.info.twitter}\n          instagram={this.state.info.instagram}/>\n\n        <Main bio={this.state.info.bio} clientList={this.state.info.clientList} projects={this.state.projects} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}